scalar Time

type Query {

    Incidents(
        Szenario: String = ""
        Timestamp: Time
        After: Time
        Before: Time
        ): [IncidentSummary!]


    IncidentEntries(
        Szenario: String = ""
        Timestamp: Time
        After: Time
        Before: Time
        ): [Incident!]

    Alerts(
        Szenario: String = ""
        After: Time
        Before: Time
        ): [Alert!]
}


type IncidentSummary {
    Level: String!
    Start: Time!
    End: Time
    IncidentID: String!
    Name: String!
    Total: Int!
    Alerts: [Alert!]
}

type Incident {
    id: ID!
    Level: String!
    Start: Time!
    End: Time
    State: String!
    UUID: String!
    IncidentID: String!
    Name: String!
    Username: String!
    Region: String!
    ProbeOS: String!
    ProbeHost: String!
    Error: String
    Counters: [Counter!]
    Stati: [Status!]
    Failures: [Failure!]
    Files: [File!]
    Alerts: [Alert!]
}


type Alert {
    id: ID!
    Level: String!
    UUID: String!
    Time: Time!
    IncidentID: String!
    Incidents: [IncidentSummary!]
    IncidentEntries: [Incident!]
    Name: String!
    Username: String!
    Region: String!
    ProbeOS: String!
    ProbeHost: String!
    Error: String
    Counters: [Counter!]
    Stati: [Status!]
    Failures: [Failure!]
    Files: [File!]
}

type Counter {
    id: ID!
    Name: String!
    Value: String!
}

type Status {
    id: ID!
    Name: String!
    Value: String!

}

type Failure {
    id: ID!
    Error: String!
    Idx: Int!
}

type File {
    id: ID!
    UUID: String!
    Name: String!
    Type: String!
    Ext: String!
    Size: Int!
    Payload: String!
}